name: "Continuous Integration Payment API"

on:
  push:
    branches:
      - "Project-PaymentAPI"
  pull_request:
    push:
      branches:
        - "main"

  schedule:
    - cron: "0 2 * * 1-5"

jobs:
  phpunit:
    name: "PhpUnit tests"
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "8.1"
          - "8.2"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1

      - name: "Install dependencies"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Tests"
        run: "vendor/bin/phpunit Tests/ --colors"

      - name: "Install Composer Dependencies"
        run: "composer install"

  phpcs:
    name: "PHP_CodeSniffer"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Check out code"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0

      - name: "Install PHP_CodeSniffer"
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          chmod +x phpcs.phar
          sudo mv phpcs.phar /usr/local/bin/phpcs
          phpcs --version

      - name: "Run PHP_CodeSniffer"
        run: |
          phpcs --standard=phpcs.xml --ignore=*/vendor/* --report=summary .

  phpstan:
    name: "PHPStan"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Check out code"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0

      - name: "Install PHPStan"
        run: |
          composer require --dev phpstan/phpstan
          vendor/bin/phpstan --version

      - name: "Run PHPStan"
        run: |
          vendor/bin/phpstan analyze -l max src

